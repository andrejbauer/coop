operation get : unit -> int
operation put : int -> unit
operation tick : unit -> int

let state =
  runner {
  | get t -> getenv
  | put x -> setenv x
  } @ int

(* A ticker which uses state to tick *)
let ticker =
  runner {
   tick () ->
     let x = get () in
     put (x + 1) ;
     x
  } @ unit

let demo =
  using state @ 5 run
    using ticker @ () run
      let a = tick () in
      let b = tick () in
      let c = tick () in
      (a, b, c)
    with { val v @ w -> v }
  with { val v @ w -> (v, w) }
