(* Pervasives loaded at startup. *)

(* Exceptions that are used by builtin functions. Make sure they are
   in synch with src/external.ml *)
exception division_by_zero of unit
exception malformed_integer of unit

resource print_int : int -> unit
resource print_string : string -> unit
resource read_int : unit -> int {!malformed_integer}
resource read_string : unit -> string
resource flush_stdout : unit -> unit
type io_container = {print_int, print_string, read_int, read_string, flush_stdout}

type in_channel
type out_channel
exception sys_error of string
exception end_of_file of unit
resource open_in : string -> in_channel {!sys_error}
resource close_in : in_channel -> unit {!sys_error}
resource input_line : in_channel -> string {!sys_error, !end_of_file}
resource open_out : string -> out_channel {!sys_error}
resource close_out : out_channel -> unit {!sys_error}
resource output_string : out_channel -> (string -> unit {!sys_error})
resource flush_out : out_channel -> unit {!sys_error}
type file_container = {open_in, close_in, input_line, open_out, close_out, output_string, flush_out}

external pure : {} = "pure"
external stdio : io_container = "stdio"
external file : file_container = "file"

(* Arithmetic *)
external ( + ) : int -> int -> int = "+"
external ( - ) : int -> int -> int = "-"
external ( * ) : int -> int -> int = "*"
external ( / ) : int -> int -> int {!division_by_zero} = "/"
external ( % ) : int -> int -> int = "%"

external ( <> ) : int -> int -> bool = "<>"
external ( < ) : int -> int -> bool = "<"
external ( > ) : int -> int -> bool = ">"
external ( <= ) : int -> int -> bool = "<="
external ( >= ) : int -> int -> bool = ">="

external ( ^ ) : string -> string -> string = "^"
external string_of_int : int -> string = "string_of_int"

